{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/layout/Footer.js","store/containers/Footer.js","store/actions/changeThemeAction.js","components/AddTodo.js","components/TodoApp.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["Header","className","React","Component","TodoItem","this","props","todo","completed","id","title","type","checked","onChange","handleChange","onClick","deleteTodo","Todos","todos","map","key","Footer","submitThemeColor","bind","color","console","log","saveColorTheme","nextprops","JSON","stringify","document","documentElement","style","setProperty","themeColor","connect","state","dispatch","payload","saveTheme","AddTodo","useState","setTitle","onSubmit","e","preventDefault","addTodo","placeholder","value","target","TodoApp","setState","useEffect","axios","get","params","_limit","then","response","data","todoData","uuid","v4","post","delete","filter","initState","combineReducers","action","Object","assign","store","createStore","rootReducer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dd86629f.chunk.js","sourcesContent":["import React from \"react\";\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header className = \"header-container\">\r\n                <h1 className = \"header-title\">Simple Todo App</h1>\r\n            </header>\r\n        );\r\n    }\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nclass TodoItem extends React.Component {\r\n    render() {\r\n        const {completed, id, title } = this.props.todo\r\n        return (\r\n            <li className=\"todo-item\">\r\n                <input \r\n                    type=\"checkbox\"\r\n                    checked={completed}\r\n                    onChange={() => this.props.handleChange(this.props.todo.id)}\r\n                />\r\n                <span className={completed ? \"completed\" : null}>\r\n                        {title}\r\n                </span>\r\n                <button className=\"btn-style\"\r\n                        onClick={() => this.props.deleteTodo(id)}\r\n                        > X </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\nexport default TodoItem;","import React from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\n\r\nclass Todos extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {this.props.todos.map(todo => (\r\n                        <TodoItem key = {todo.id}\r\n                                  todo = {todo}\r\n                                  handleChange={this.props.handleChange}\r\n                                  deleteTodo = {this.props.deleteTodo}\r\n                        \r\n                        />          \r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nconst RED = \"#ff0000\";\r\nconst BLUE = \"#0000ff\";\r\nconst GRAY = \"#678c89\";\r\n\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.submitThemeColor = this.submitThemeColor.bind(this)\r\n    }\r\n\r\nsubmitThemeColor(color) {\r\n    //lưu giá trị mã màu thêm vào store - redux\r\n    // Xử lý sau\r\n\r\n    if (color) {\r\n        console.log('handleChangeTheme')\r\n        this.props.saveColorTheme(color);\r\n    }\r\n};\r\n\r\ncomponentWillReceiveProps(nextprops) {\r\n    console.log('UNSAFE_componentWillReceiveProps: ' \r\n       + JSON.stringify(nextprops))\r\n    document\r\n        .documentElement\r\n        .style\r\n        .setProperty(\"--main-color\", nextprops.themeColor.color);\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <div className = \"footer\">\r\n            <div className  = \"vertical-center\">\r\n                <span>Choose Theme</span>\r\n                <button onClick={() =>\r\n                    this.submitThemeColor(RED)} className=\"dot red\"/>\r\n                <button onClick={() =>\r\n                    this.submitThemeColor(BLUE)} className=\"dot blue\"/>\r\n                <button onClick={()=>\r\n                    this.submitThemeColor(GRAY)} className=\"dot gray\" />\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n};\r\nexport default Footer;","import { connect } from 'react-redux';\r\nimport { saveTheme } from '../actions/changeThemeAction';\r\nimport Footer from '../../components/layout/Footer';\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    dispatch,\r\n    saveColorTheme: color => dispatch(saveTheme(color)),\r\n});\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        themeColor: state.color\r\n    };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n) (Footer);\r\n\r\n","export const saveTheme = color => ({\r\n    type: \"CHANGE_THEME\",\r\n    payload: {\r\n        color\r\n    }\r\n});","import React, { useState } from \"react\";\r\nfunction AddTodo (props) {\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n\r\n\r\n//class AddTodo extends React.Component {\r\n\r\n// state = {\r\n//     title: \"\"\r\n// };\r\n\r\nconst onInputChange = e => {\r\n    setTitle(e.target.value)\r\n};\r\n           \r\nconst addTodo = e => {\r\n    e.preventDefault();\r\n    props.addTodo(title);\r\n    setTitle(\"\");\r\n    \r\n};\r\n\r\n    \r\n        return (\r\n            <form className = \"form-container\"\r\n                   onSubmit={addTodo} >\r\n                <input type = \"text\"\r\n                    placeholder = \"Add Todo...\"\r\n                    className = \"input-text\"\r\n                    value = {title}\r\n                    onChange = {onInputChange}\r\n                />\r\n                <input type = \"submit\"\r\n                       value = \"Submit\"\r\n                       className = \"input-submit\"\r\n\r\n                />\r\n               \r\n                    \r\n            </form>\r\n\r\n        );\r\n    }\r\n\r\nexport default AddTodo;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"../components/layout/Header\";\r\nimport Todos from \"./Todos\";\r\n\r\nimport uuid from \"uuid\";\r\nimport Footer from \"../store/containers/Footer\";\r\nimport AddTodo from \"./AddTodo\";\r\n\r\n\r\n// class TodoApp extends React.Component {\r\n   \r\n// state = {\r\n//     todos: []\r\n// };\r\n\r\nfunction TodoApp() {\r\n    const [state, setState] = useState({\r\n        todos: []\r\n    });\r\n\r\n//Checkbox\r\nconst handleCheckboxChange = id => {\r\n    setState({\r\n        todos: state.todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.completed = !todo.completed;\r\n                \r\n            }\r\n            return todo;\r\n        })\r\n    });\r\n    \r\n};\r\n\r\n//Xoa 1 todo item\r\n\r\nconst deleteTodo = id => {\r\n    axios.delete(\r\n        \"https://jsonplaceholder.typicode.com/todos/${id}\")\r\n            .then(response => setState({\r\n                todos: [\r\n                    ...state.todos.filter(todo => {\r\n                        return todo.id !== id;\r\n                    })\r\n                ]\r\n            }))\r\n};\r\n\r\n//Them 1 todo item\r\nconst addTodo = title => {\r\n    const todoData = {\r\n        id: uuid.v4(),\r\n        title: title,\r\n        completed: false\r\n    }\r\n    axios.post(\r\n        \"https://jsonplaceholder.typicode.com/todos\"\r\n            , todoData)\r\n        .then(response => {\r\n            setState({\r\n                todos: [...state.todos, response.data]\r\n            })\r\n    \r\n    });\r\n};\r\n    // Giới hạn số request\r\n\r\nuseEffect(() => {\r\n    const config = {\r\n        params: {\r\n            _limit: 5\r\n        }\r\n    }\r\n    //tạo GET request để lấy danh sách todos\r\n    axios.get(\r\n        \"https://jsonplaceholder.typicode.com/todos\"\r\n            , config)\r\n                .then(response => setState({\r\n                     todos: response.data }));\r\n    }, []);\r\n    \r\n        return (\r\n            <div className=\"container\">\r\n                <Header />\r\n                <AddTodo addTodo={addTodo} />\r\n                <Todos todos = {state.todos}\r\n                handleChange={handleCheckboxChange}\r\n                deleteTodo = {deleteTodo}\r\n                />\r\n                <Footer/>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default TodoApp;","let initState = {\r\n    color: \"#FFFFF\"\r\n};\r\n\r\nexport default function themeReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_THEME' :\r\n            console.log('themeReducer: ' + JSON.stringify(state))\r\n            return Object.assign({}, state, {\r\n                color: action.payload.color\r\n            });\r\n            default:\r\n                return initState;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport color from './themeReducer';\r\nexport default combineReducers({\r\n    color\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport TodoApp from \"./components/TodoApp\";\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <TodoApp />\n    </Provider>, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}